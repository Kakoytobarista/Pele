name: Django CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  tests:

    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [ 3.8, 3.9 ]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry
          pip3 install psycopg2-binary
          poetry config virtualenvs.create false
          poetry install --no-interaction
      - name: Run Tests
        run: |
          cd pele
          python manage.py test



  flake8-lint:
    runs-on: ubuntu-latest
    needs: tests
    name: Lint
    steps:
      - name: Check out source repository
        uses: actions/checkout@v3
      - name: Set up Python environment
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"
      - name: flake8 Lint
        uses: py-actions/flake8@v2
        with:
          ignore: "E126"
          max-line-length: "120"
          exclude: "./pele/*/migrations/"


  Build_and_push_to_docker_hub:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    needs: flake8-lint

    steps:
      - uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Docker
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push to Docker Hub
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: heyaslan/pele:latest

  Deploy:
    runs-on: ubuntu-latest
    needs: Build_and_push_to_docker_hub
    steps:
      - name: executing remote ssh commands to deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOSTNAME }}
          username: ${{ secrets.USER_NAME }}
          key: ${{ secrets.AWS_PRIVATE_KEY }}
          script: |
               ls -la
               cd home/Pele
               sudo docker-compose down
               sudo docker image rm pele_web
               sudo docker volume rm pele_static_value
               touch .env
               echo DB_ENGINE=${{ secrets.DB_ENGINE }} > .env
               echo DB_NAME=${{ secrets.DB_NAME }} >> .env
               echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> .env
               echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env
               echo DB_HOST=${{ secrets.DB_HOST }} >> .env
               echo DB_PORT=${{ secrets.DB_PORT }} >> .env
               echo SENTRY_KEY=${{ secrets.SENTRY_KEY }} >> .env
               echo DJANGO_KEY=${{ secrets.DJANGO_KEY }} >> .env
               echo EMAIL_HOST=${{ secrets.EMAIL_HOST }} >> .env
               echo EMAIL_HOST_PASSWORD=${{ secrets.EMAIL_HOST_PASSWORD }} >> .env
               echo EMAIL_PORT=${{ secrets.EMAIL_PORT }} >> .env
               sudo docker-compose up -d
